generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Users {
  userId     Int       @id @unique(map: "id_UNIQUE") @default(autoincrement()) @map("user_id")
  userName   String    @map("user_name") @db.VarChar(45)
  password   String    @db.VarChar(60)
  phone      String    @unique(map: "phone_UNIQUE") @db.Char(45)
  email      String?   @db.VarChar(45)
  createDate DateTime? @default(now()) @map("create_date")
  status     Boolean   @default(false)
  role       Role      @default(USER)

  @@map("users")
}

model Goods {
  id             Int       @id @unique(map: "id_UNIQUE") @default(autoincrement()) @map("goods_id")
  goodsName      String    @map("goods_name") @db.VarChar(45)
  goodsPrice     String    @map("goods_price") @db.VarChar(45)
  goodsAmount    Int?      @default(0) @map("goods_amount")
  goodsImgs      String    @map("goods_imgs")
  goodsType      Int       @map("goods_type")
  goodsOnSale    Boolean?  @default(false) @map("goods_on_sale")
  goodsDesc      String?   @map("goods_desc") @db.VarChar(45)
  goodsSellCount Int?      @map("goods_sell_count")
  goodsIsDel     Boolean?  @default(false) @map("goods_is_del")
  goodsComments  Comment[]

  @@map("goods")
}

model GoodsTypes {
  id   Int    @id @unique(map: "id_UNIQUE") @default(autoincrement())
  type String @unique(map: "type_UNIQUE") @db.VarChar(45)

  @@map("goods_types")
}

model Comment {
  authorId Int
  id       Int    @id @default(autoincrement())
  content  String
  author   Goods  @relation(fields: [authorId], references: [id])

  @@index([authorId])
  @@map("comment")
}

model Menu {
  id       Int     @id @unique(map: "id_UNIQUE") @default(autoincrement())
  icon     String? @db.LongText
  menuPath String  @unique(map: "path_UNIQUE") @map("menu_path") @db.VarChar(45)
  menuName String  @unique(map: "name_UNIQUE") @map("menu_name")
  permNode Int?    @default(0) @map("perm_node")
  level    Int     @default(0) @map("menu_level")
  parentId Int?
  parent   Menu?   @relation("menu", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children Menu[]  @relation("menu")

  @@index([parentId])
  @@map("menu")
}

enum Role {
  ADMIN
  USER
}
